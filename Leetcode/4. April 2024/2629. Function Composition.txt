/**
 * @param {Function[]} functions
 * @return {Function}
 */
var compose = function(functions) {
    
    if(functions.length == 0){
        return function(x){return x;};
    }
    return functions.reduceRight(
        function (prevFn,nextFn){
            return function(x){
                return nextFn(prevFn(x));
            }
        })

    // if(functions.length === 0){
    //     return function (x){return x;};
    // }

    // return function (x){
    //     let current = x;

    //     for(let i = functions.length-1; i >= 0; i--){
    //         current = functions[i](current);
    //     }
    //     return current;
    // }
};

/**
 * const fn = compose([x => x + 1, x => 2 * x])
 * fn(4) // 9
 */