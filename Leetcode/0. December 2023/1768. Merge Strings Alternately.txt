// class Solution {
//     public String mergeAlternately(String word1, String word2) {
//         int m = word1.length(), n = word2.length();
//         int i = 0, j = 0;
//         String ans = "";
//         while(i < m && j < n){
//             ans += word1.charAt(i++);
//             ans += word2.charAt(j++);
//         }

//         while(i<m){
//             ans += word1.charAt(i++);
//         }
//         while(j<n){
//             ans += word2.charAt(j++);
//         }
        
//         return ans;
//     }
// }

class Solution {
    public String mergeAlternately(String word1, String word2) {

        StringBuilder sb = new StringBuilder();

        int minLength = Math.min(word1.length(), word2.length());

        for (int i = 0; i < minLength; i++) {
            sb.append(word1.charAt(i));
            sb.append(word2.charAt(i));
        }
        if (word1.length() > minLength){
            sb.append(word1.substring(minLength, word1.length()));
        } else if (word2.length() > minLength) {
            sb.append(word2.substring(minLength, word2.length()));
        }
        return sb.toString();
    }
}